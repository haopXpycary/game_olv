basePlayer
    +  behavingPlayer_armorMixIn
    +  behavingPlayer_articleMixIn
    +  behavingPlayer_attackMixIn
    +  behavingPlayer_levelMixIn
    +  behavingPlayer_moveMixIn
    +  behavingPlayer_activityMixIn
    +  behavingPlayer_additionalMixIn
    +  behavingPlayer_moneyMixIn
    
# handheldThing.enchanting
# handheldThing.buffTime
# handheldThing.durable 耐久
# skill.consumedMagic
# skill.lauch(player)
# armor.protectionType
# utensilThing.providedAttack
# utensilThing.providedHealth
# utensilThing.providedMagic
# utensilThing.providedProtect
# utensilThing.porvidedRestoreHealth
# utensilThing.providedRestoreMagic

addExp(int)
addHealth(int)
addMagic(int)
addMoney(int)
addSatisfaction(int)
addThing(thing thing,int ^number)
attack() -> (attack,handheld.enchanting,handheld.buffTime)
decreaseAttack(int)
decreaseHealth(int)
decreaseMagic(int)
decreaseProtect(int)
decreaseRestoreHealth(int)
decreaseRestoreMagic(int)
handheldThing(thing weapory)
haveThing(thing thing,int ^number)
increaseAttack(int)
increaseHealth(int)
increaseMagic(int)
increaseProtect(int)
increaseRestoreHealth(int)
increaseRestoreMagic(int)
initActivity()
initAdditionalAttributes()
initArmor()
initBackpack()
initBaseAttributes(int baseHealth,int baseProtect,int baseAttack,int baseMagic)
initDevelopableAttributes(int developableHealth,int developableProtect,int developableAttack,int developableMagic)
initLevel(int ^level,int ^experiennce)
initMoney()
initPlace(int x,int y,constName.headfor headfor,char pic)
initSkills(skill skills[5])
launchSkills(int choice)
lowerHealth(int)
lowerMagic(int)
lowerMoney(int)
lowerSatisfaction(int)
move(int x,int y)
removeThing(thing thing,int ^number)
statisticsAttributes()
statisticsEquipmentProvided()
update()
walk(constName.headfor headfor)
wearThing(thing armor)

+++++++++++++++++++++++++++++++++++++++++++++++++

int x,y
constName.Headfor headfor
int health,attack,magic,protect
int restoreHealth,restoreMagic
int base___
int developable___
int additional___
int equipmentProvided___
int level,exp
skill skills[5]
dict<thing:number> backpack
thing equipmentBar[5]
thing handheld[1]
int satisfaction
int money